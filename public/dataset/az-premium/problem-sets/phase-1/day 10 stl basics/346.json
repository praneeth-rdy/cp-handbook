{
    "code": 200,
    "data": {
        "body": "<p>You are given the digits of a positive number N. Find the product of its digits. Since the product can be large, print it modulo 10<sup>9</sup> + 7. It is guaranteed that the number begins with a non-zero digit.</p>",
        "complete_approach": "",
        "constraints": "- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n- $0 \\leq D \\leq 9$\n\nIt is guaranteed that the sum of $N$ over all test cases does not exceed $10^6$.",
        "difficulty": null,
        "editorial_code": [
            {
                "code": "```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define IOS                \\\n  ios::sync_with_stdio(0); \\\n  cin.tie(0);              \\\n  cout.tie(0);\n#define int long long\n\nconst int mod = 1e9 + 7;\n\nsigned main() {\n  IOS int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> v(n);\n    for (int i = 0; i < n; ++i) {\n      cin >> v[i];\n    }\n    int ans = 1;\n    for (int i = 0; i < n; ++i) {\n      ans = (ans * v[i]) % mod;\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n```",
                "language": "C++14"
            }
        ],
        "health_check": {
            "issues": [
                "Second Hint is missing"
            ],
            "last_updated": "2024-06-22T02:15:21.595183+00:00"
        },
        "hints": {
            "hint1": "The problem is that there can be a maximum of $10^6$ digits given. The product of these digits can be extremely large, for example, if each digit is 2, the product of $10^6$ 2s would be $2^{10^6}$. This number is too large to be expressed as a simple decimal and would exceed the range of a long long int data type, which can store values up to $10^{18}$.",
            "hint2": "",
            "solution_approach": "To handle such large numbers, we can use the long long data type to store the product of digits, and perform the modulus operation after each multiplication to keep it within the range of long long int.\n\nThe time complexity per test case is $O(N)$."
        },
        "id": 346,
        "input_format": "The first line of the input contains one integer T - the number of test cases. Then T test cases follow.\n\nThe first line of each test case contains one integer N - the number of digits in the number. \n\nThe second line of each test case contains N space-separated integers - the digits of the number.",
        "languages": [
            "C",
            "C++14",
            "Java",
            "Python3"
        ],
        "memory_limit_mb": 256000,
        "note": "<p>For the first test case, 1*5*2*3*4 = 120</p><p>For the second test case, 9*0*5*3 = 0</p><p>For the third test case, 2*2*2 = 8</p>",
        "output_format": "For each test case, print the product of digits of the number modulo 10<sup>9</sup> + 7.",
        "samples": [
            {
                "input": "3\n5\n1 5 2 3 4\n4\n9 0 5 3\n3\n2 2 2\n",
                "output": "120\n0\n8\n"
            }
        ],
        "status": "PUBLISHED",
        "tags": [],
        "template_code": [],
        "time_limit_sec": 1.0,
        "title": "Product of Digits AZ101",
        "video_editorial_id": null
    },
    "details": "Problem Details"
}