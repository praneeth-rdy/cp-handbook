{
    "code": 200,
    "data": {
        "body": "You are given an array A of N integers. Find the length of the largest increasing subsequence if the array A is concatenated to itself N times. A sequence A is a subsequence of an array B if A can be obtained from B by deletion of several (possibly, zero or all) elements. The longest increasing subsequence should be strictly increasing.",
        "complete_approach": "",
        "constraints": "$1 \\leq T \\leq 2 \\times 10^5$  \n\n$1 \\leq N \\leq 10^6$  \n\n$1 \\leq A_i \\leq 10^9$  \n\nIt is guaranteed that the sum of $N$ over all test cases does not exceed $10^6$.",
        "difficulty": null,
        "editorial_code": [
            {
                "code": "```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\nint main() {\n    IOS\n    int t;\n    cin >> t;\n    while (t--) {\n        int n;\n        cin >> n;\n        set<int> s;\n        for (int i = 0; i < n; ++i) {\n            int x;\n            cin >> x;\n            s.insert(x);\n        }\n        cout << s.size() << \"\\n\";\n    }\n    return 0;\n}\n```",
                "language": "C++14"
            }
        ],
        "health_check": {
            "issues": [
                "First Hint is missing",
                "Second Hint is missing"
            ],
            "last_updated": "2024-06-22T02:45:41.825805+00:00"
        },
        "hints": {
            "hint1": "",
            "hint2": "",
            "solution_approach": "There are N copies of the given array A. You can take the smallest integer from the first copy, the second smallest integer from the second copy and so on. Since the subsequence has to be strictly increasing, the answer would be the number of distinct integers in the array.\n\nTime Complexity per test case: $O(N \\log N)$"
        },
        "id": 373,
        "input_format": "The first line of the input contains one integer T - the number of test cases. Then T test cases follow.\n\nThe first line of each test case contains one integer N - the length of the array. \n\nThe second line of each test case contains N space-separated integers.",
        "languages": [
            "C",
            "C++14",
            "Java",
            "Python3"
        ],
        "memory_limit_mb": 256000,
        "note": "<p>For the first test case, 2 <strong>1</strong> 3 <strong>2</strong> 1 <strong>3</strong> 2 1 3</p><p>For the second test case, 3 1 1 1 4 3 1 1 <strong>1</strong> 4 3 1 1 1 4 <strong>3</strong> 1 1 1 <strong>4</strong> 3 1 1 1 4</p><p>For the third test case, 3 2 <strong>1</strong> 4 3 <strong>2</strong> 1 4 <strong>3</strong> 2 1 <strong>4</strong> 3 2 1 4</p>",
        "output_format": "For each test case, print the length of the largest increasing subsequence if the array A is concatenated to itself N times.",
        "samples": [
            {
                "input": "3\n3\n2 1 3\n5\n3 1 1 1 4\n4\n3 2 1 4\n",
                "output": "3\n3\n4\n"
            }
        ],
        "status": "PUBLISHED",
        "tags": [],
        "template_code": [],
        "time_limit_sec": 1.0,
        "title": "Concatenate Array AZ101",
        "video_editorial_id": null
    },
    "details": "Problem Details"
}