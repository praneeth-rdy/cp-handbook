{
    "code": 200,
    "data": {
        "body": "Write a program to print a pyramid pattern of height $N$. See the sample examples.",
        "complete_approach": "",
        "constraints": "$1 \\leq T \\leq 100$\n$1 \\leq N \\leq 100$",
        "difficulty": 1,
        "editorial_code": [
            {
                "code": "```c++\n#include <bits/stdc++.h>\nusing namespace std;\n\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n\n  for (int tt = 1; tt <= t; tt++) {\n    int rows;\n    cin >> rows;\n    for (int i = 1, k = 0; i <= rows; ++i, k = 0) {\n      for (int space = 1; space <= rows - i; ++space) {\n        cout << \"  \";\n      }\n      while (k != 2 * i - 1) {\n        cout << \"* \";\n        ++k;\n      }\n      cout << endl;\n    }\n  }\n\n  return 0;\n}\n```",
                "language": "C++14"
            },
            {
                "code": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\n        int t = Integer.parseInt(br.readLine());\n\n        for (int tt = 1; tt <= t; tt++) {\n            int rows = Integer.parseInt(br.readLine());\n\n            for (int i = 1; i <= rows; i++) {\n                int k = 0;\n\n                for (int space = 1; space <= rows - i; space++) {\n                    out.print(\"  \");\n                }\n\n                while (k != 2 * i - 1) {\n                    out.print(\"* \");\n                    k++;\n                }\n\n                out.println();\n            }\n        }\n\n        out.flush();\n        out.close();\n    }\n}\n```",
                "language": "Java"
            },
            {
                "code": "```python\nimport sys\nfrom sys import stdin, stdout\n\ndef main():\n    data = stdin.read().split()\n    idx = 0\n    t = int(data[idx])\n    idx += 1\n\n    result = []\n\n    for _ in range(t):\n        rows = int(data[idx])\n        idx += 1\n\n        for i in range(1, rows + 1):\n            k = 0\n            line = \"\"\n\n            for space in range(1, rows - i + 1):\n                line += \"  \"\n\n            while k != 2 * i - 1:\n                line += \"* \"\n                k += 1\n\n            result.append(line)\n\n    output = \"\\n\".join(result)\n    stdout.write(output + '\\n')\n\nif __name__ == \"__main__\":\n    main()\n```",
                "language": "Python3"
            }
        ],
        "health_check": {
            "issues": [
                "First Hint is missing",
                "Second Hint is missing",
                "Solution Approach is missing",
                "No sample explanation provided."
            ],
            "last_updated": "2024-06-22T02:28:51.015771+00:00"
        },
        "hints": {
            "hint1": "Try to observe the pattern of spaces and '*' symbols in each line of the pyramid.",
            "hint2": "For each line $i$ from $1$ to $N$, print $(N - i)$ spaces (each space is two actual spaces) followed by $(2i - 1)$ '*' symbols, separated by single spaces.",
            "solution_approach": "To print the pyramid pattern of height $N$, we need to print $N$ lines. For each line $i$ (from $1$ to $N$):\n\n1. **Print spaces**: Print $(N - i)$ spaces. Each 'space' in the pattern corresponds to two actual spaces in the output to maintain alignment.\n\n2. **Print '*' symbols**: Print $(2i - 1)$ '*' symbols, each followed by a space.\n\nBy following this approach, the pyramid pattern will be printed correctly.\n\n**Time Complexity per test case:** $O(N^2)$\n\n**Space Complexity per test case:** $O(1)$"
        },
        "id": 1091,
        "input_format": "The first line contains the number of test cases, $T$.\nFor each test case:\n- A line containing an integer $N$, denoting the pyramid's height.",
        "languages": [
            "C",
            "C++14",
            "Java",
            "Python3"
        ],
        "memory_limit_mb": 256000,
        "note": "For the first test case, the value of $N$ is $2$.\nThe pyramid pattern printed is:\n  *\n* * *\nExplanation:\n- Line 1: $(2 - 1) = 1$ space (each space is two actual spaces), and $(2 \\times 1 - 1) = 1$ '*' symbol.\n- Line 2: $(2 - 2) = 0$ spaces, and $(2 \\times 2 - 1) = 3$ '*' symbols.\nHence, the pyramid of height $2$ is printed accordingly.",
        "output_format": "For each test case, print the pyramid pattern of height $N$ using '*' symbols. Print the outputs for different test cases consecutively without any separator.",
        "samples": [
            {
                "input": "1\n2",
                "output": "*\n* * *"
            },
            {
                "input": "2\n4\n7",
                "output": "* \n    * * * \n  * * * * * \n* * * * * * * \n            * \n          * * * \n        * * * * * \n      * * * * * * * \n    * * * * * * * * * \n  * * * * * * * * * * * \n* * * * * * * * * * * * *"
            },
            {
                "input": "1\n5",
                "output": "* \n      * * * \n    * * * * * \n  * * * * * * * \n* * * * * * * * *"
            }
        ],
        "status": "PUBLISHED",
        "tags": [
            "Brute Force",
            "Implementation"
        ],
        "template_code": [],
        "time_limit_sec": 1.0,
        "title": "Pyramid Pattern",
        "video_editorial_id": 10666
    },
    "details": "Problem Details"
}