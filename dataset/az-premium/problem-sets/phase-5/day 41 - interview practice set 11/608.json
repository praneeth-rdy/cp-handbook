{
    "code": 200,
    "data": {
        "body": "<p>You are assigned the task of filling a delivery truck with boxes of vaccines. You are given the description of <i>N</i> boxes -&nbsp; the number of each type of box and the vials of vaccine it contains. Find the maximum number of vials you can load onto the truck given that each box takes unit space and the truck has a maximum capacity of <i>M</i>.</p><p>Complete the function</p><pre><code class=\"language-plaintext\">int MaxVials(vector&lt;pair&lt;int,int&gt;&gt; &amp;a, int m)</code></pre>",
        "complete_approach": "",
        "constraints": "<p><i>1 \u2264 N, M \u2264 10<sup>6</sup></i></p><p><i>1\u2264 xi, yi \u2264 1000</i></p>",
        "difficulty": null,
        "editorial_code": [
            {
                "code": "```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint MaxVials(vector<pair<int,int>> &a, int m)\n{\n    int n = (int)a.size();\n    \n    sort(a.begin(), a.end(), [](pair<int,int> P1, pair<int,int> P2) {\n\t\treturn P1.second > P2.second;\n    });\n    \n    int ans = 0;\n    for (int i = 0; i < n && m > 0; i++)\n    {\n        if (m >= a[i].first)\n        {\n            ans += a[i].second * a[i].first;\n            m -= a[i].first;\n        }\n        else\n        {\n            ans += a[i].second * m;\n            m = 0;\n        }\n    }\n    return ans;\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    int n, m;\n    cin >> n >> m;\n    \n    vector<pair<int, int>> a(n);\n    \n    for (int i = 0; i < n; i++)\n    {\n        cin >> a[i].first >> a[i].second;\n    }\n    \n    cout << MaxVials(a, m) << '\\n';\n    return 0;\n}\n```",
                "language": "C++14"
            }
        ],
        "health_check": {
            "issues": [],
            "last_updated": "2024-06-22T02:43:31.216329+00:00"
        },
        "hints": {
            "hint1": "What will be the most profitable strategy to choose the boxes?",
            "hint2": "Sort the boxes according to the number of vials.",
            "solution_approach": "It can be seen that if we choose the box with the most number of vials to be loaded onto the truck it is always profitable. So we sort the boxes in descending order according to the number of vials and load the boxes as long as the truck\u2019s capacity does not run out."
        },
        "id": 608,
        "input_format": "<p>The first line contains two integers <i>N</i> and <i>M</i> - the number of boxes and the truck\u2019s capacity.<br>The <i>i<sup>th</sup></i> of the next <i>N</i> lines contains two integers <i>xi</i> and <i>yi</i> - the number of boxes of type <i>i</i> and the number of vials that type of box contains.</p>",
        "languages": [
            "C",
            "C++14",
            "Java",
            "Python3"
        ],
        "memory_limit_mb": 256000,
        "note": "There are:\n- 1 box of the first type that contains 3 vials each.\n- 2 boxes of the second type that contain 2 vials each.\n- 3 boxes of the third type that contain 1 vial each.\nYou can take all the boxes of the first and second types, and one box of the third type.\n\nThe total number of vials will be = (1 * 3) + (2 * 2) + (1 * 1) = 8.",
        "output_format": "<p>Print the maximum number of vials that can be loaded onto the truck.</p>",
        "samples": [
            {
                "input": "3 4\n1 3\n2 2\n3 1",
                "output": "8"
            },
            {
                "input": "4 10\n5 10\n2 5\n4 7\n3 9",
                "output": "91"
            }
        ],
        "status": "PUBLISHED",
        "tags": [
            "company-Walmart",
            "company-Arcesium"
        ],
        "template_code": [
            {
                "code": "<fix>\n#include <bits/stdc++.h>\nusing namespace std;\n</fix>\n\nint MaxVials(vector<pair<int,int>> &a, int m)\n{\n    // Complete the function\n}\n\n<fix>\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    int n, m;\n    cin >> n >> m;\n    \n    vector<pair<int, int>> a(n);\n    \n    for (int i = 0; i < n; i++)\n    {\n        cin >> a[i].first >> a[i].second;\n    }\n    \n    cout << MaxVials(a, m) << '\\n';\n    return 0;\n}\n</fix>",
                "language": "C++14"
            }
        ],
        "time_limit_sec": 1.0,
        "title": "Max Vials",
        "video_editorial_id": null
    },
    "details": "Problem Details"
}