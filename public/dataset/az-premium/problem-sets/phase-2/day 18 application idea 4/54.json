{
    "code": 200,
    "data": {
        "body": "<p>Given an array <i>A</i> of <i>N</i> positive integers, find the maximum of bitwise ANDs of all subsequences of <i>A</i> with length equal to <i>X</i>.</p>",
        "complete_approach": "",
        "constraints": "",
        "difficulty": 4,
        "editorial_code": [
            {
                "code": "```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nsigned main()\n{\n   ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\n   int testCase;\n   cin>>testCase;\n   while(testCase--){\n       int n,x;\n       cin>>n>>x;\n       vector < int > arr(n);\n       for(int i=0;i<n;i++)\n           cin>>arr[i];\n       int ans = 0;\n       for(int i=29;i>=0;i--){\n           vector < int > elementBitSet;\n           for(auto v:arr){\n               if(v&(1LL<<i))\n                   elementBitSet.push_back(v);\n           }\n           if(elementBitSet.size()>=x){\n               ans+=(1LL<<i);\n               arr = elementBitSet;\n           }\n       }\n       cout<<ans<<\"\\n\";\n   }\n\n}\n```",
                "language": "C++14"
            }
        ],
        "health_check": {
            "issues": [],
            "last_updated": "2024-06-22T02:31:45.228104+00:00"
        },
        "hints": {
            "hint1": "<p>Check whether a subsequence of length X with the most significant bit set is present or not. If it is present then it is always optimal to consider that subsequence as 2^(highestBit set) &gt; (2^0+2^1+2^2......2^(highestBit-1)).</p>",
            "hint2": "<p>Take all the numbers with highestBit set if the count is &gt;=X. Add 1&lt;&lt;(highestBit) in your answer. Now your problem reduces to the array of elements with highestBit set and highestBit-1 be the next bit to be considered. If the subsequence of length X is not present then calculate the answer for the same array with highestBit-1 as the new highestBit possible.</p>",
            "solution_approach": "<p>Check the solution approach.</p>"
        },
        "id": 54,
        "input_format": "<p>The first line of the input contains a single integer <i>T</i> denoting the number of test cases, <i>(1&lt;=T&lt;=100)</i>.</p><p>The first line of each test case contains two space-separated integer <i>N</i>, <i>X</i>, <i>(2&lt;=N&lt;=100000), (1&lt;=X&lt;=N)</i>.</p><p>The second line contains <i>N</i> space-separated integers A<sub>1</sub>,A<sub>2</sub>,\u2026,A<sub>N</sub>, <i>(1&lt;=Ai&lt;=10^9)</i>.</p><p>&nbsp;</p><p>Sum of N over all test cases does not exceed 10^6.</p>",
        "languages": [
            "C",
            "C++14",
            "Java",
            "Python3"
        ],
        "memory_limit_mb": 512000,
        "note": "<p><strong>1st test case -</strong> all subsequence of length X and AND value:<br>(1,2) - 0<br>(1,3) - 1<br>(1,4) - 0<br>(1,5) - 1<br>(2,3) - 2<br>(2,4) - 0<br>(2,5) - 0<br>(3,4) - 0<br>(3,5) - 1<br>(4,5) - 4<br>Maximum AND value of all subsequences with length X = 4</p>",
        "output_format": "<p>For each test case print the maximum of bitwise ANDs of all subsequences of <i>A</i> with length equal to <i>X</i>.</p>",
        "samples": [
            {
                "input": "6\n5 2\n1 2 3 4 5\n5 3\n2 4 4 2 4\n3 2\n1 2 3\n4 3\n1 2 2 4\n10 3\n989098 987656790 989098765 234543 3456543 234567543 1234567 5678 56789 8909876\n10 2\n123 1234543 2345 6776 8787 8765467 234567 98765444 1234 4561",
                "output": "4\n4\n2\n0\n147862020\n8454144"
            }
        ],
        "status": "PUBLISHED",
        "tags": [
            "Bit Manipulation"
        ],
        "template_code": [],
        "time_limit_sec": 2.0,
        "title": "Max AND Subsequences",
        "video_editorial_id": null
    },
    "details": "Problem Details"
}