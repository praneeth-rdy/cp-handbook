{
    "code": 200,
    "data": {
        "body": "You are given an integer array $nums$ of even length $n$ and an integer $limit$. In one move, you can replace any integer from $nums$ with another integer between $1$ and $limit$, inclusive.\n\nThe array $nums$ is *\"Balanced\"* if for all indices $i$ (0-indexed), $nums[i] + nums[n - 1 - i]$ equals the same number. For example, the array $[1,2,3,4]$ is balanced because for all indices $i$, $nums[i] + nums[n - 1 - i] = 5$.\n\nFind the minimum number of moves required to make $nums$ *\"Balanced\"*.",
        "complete_approach": "",
        "constraints": "$1 \\leq T \\leq 10^5$\n\n$2 \\leq n \\leq 10^5$ , $n$ is even.\n\n$1 \\leq nums[i] \\leq limit \\leq 10^5$\n\nThe Sum of $n$ across all test cases is $\\leq 10^6$ \n\nThe Sum of $limit$ across all test cases is $\\leq 10^6$",
        "difficulty": null,
        "editorial_code": [
            {
                "code": "```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll int64_t\n#define endl '\\n'\n\nvoid solve() {\n\tint n, limit;\n\tcin >> n >> limit;\n\tvector<int> nums(n);\n\tfor (int i = 0; i < n; i++)cin >> nums[i];\n\tvector<int> dp(2 * limit + 10, 0);\n\tint  cur = n, ans = n;\n\tfor (int i = 0; i < n / 2; i++) {\n\t\tdp[min(nums[i], nums[n - i - 1]) + 1]--;\n\t\tdp[nums[i] + nums[n - i - 1]]--;\n\t\tdp[nums[i] + nums[n - i - 1] + 1]++;\n\t\tdp[max(nums[i], nums[n - i - 1]) + limit + 1]++;\n\t}\n\tfor (int i = 2; i <= 2 * limit; i++)cur += dp[i], ans = min(ans, cur);\n\tcout << ans << endl;\n}\nint main() {\n\tios_base :: sync_with_stdio(0);\n\tcin.tie(nullptr); cout.tie(nullptr);\n#ifdef Mastermind_\n\tfreopen(\"input.txt\", \"r\", stdin); \\\n\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tsolve();\n\t}\n\treturn 0;\n}\n\n```",
                "language": "C++14"
            }
        ],
        "health_check": {
            "issues": [
                "First Hint is missing",
                "Second Hint is missing",
                "No sample explanation provided."
            ],
            "last_updated": "2024-06-22T02:30:24.805213+00:00"
        },
        "hints": {
            "hint1": "",
            "hint2": "",
            "solution_approach": "If we want to make the nums balanced, having all the pairs $A = nums[i], B = nums[n - 1 - i]$ with $A + B = T$. Considering a pair $A = nums[i], B = nums[n - 1 - i]$, there are 5 different situation for every such pair $(A, B)$, given different target $T$.\n\n1. $2 <= T < min(A, B) + 1$, we need $2$ operations to make both $A, B$ smaller\n2. $min(A, B) + 1 <= T < A + B$, we need $1$ operation to make the larger one out of $A$ and $B$ smaller\n3. $T = A + B$, we need $0$ operation\n4. $A + B < T < max(A, B) + limit$, we need $1$ operation to make the smaller one out of $A$ and $B$ larger\n5. $max(A, B) + limit < T <= 2 * limit$, we need $2$ operation to make both $A, B$ larger\n\nWe calculate the boundary for each pair (A, B) and note down the corresponding operation changes as delta. $delta[i] = x$ means we need x more operations when target $T$ change from $i - 1$ to $i$.\n\nWe can use Partial Sums to do that.\n\nHere $delta$ represents the left boundary of the $5$ cases for each $nums[i]$.\n\n1. $2 <= T < min(A, B) + 1$ The left boundary of this interval is $2$, $delta[2] += 2$, so the changing of the target will add two operations, if $T$ falls in range $[2, limit*2+1]$\n\n2. $min(A, B) + 1 <= T < A + B$ The left boundary is $min(A, B) + 1$.\ndelta[min(a, b) + 1]--, one operation can be saved if $T$ falls in range $[min(A, B) + 1, limit*2+1]$\n\n3. $T = A + B$ The left boundary is $A + B$. Two operations are saved for this case.\n\n4. $A + B < T < max(A, B) + limit$ The left boundary is $A + B + 1$. One more operation required if $T$ falls in range $[A + B + 1, limit*2*1]$\n\n5. $max(A, B) + limit < T <= 2 * limit$ The left boundary is $max(A, B) + 1$. Another operation required if T falls in range $[max(A, B)+1, limit*2+1]$\n\n**Time Complexity:** $O(max(n, k))$\n**Space:** $O(k)$"
        },
        "id": 979,
        "input_format": "First-line contains $T$ - the number of test cases.\nThe first line of each test case contains two integers- $n$ and $limit$.\nThe second line of each test case contains $nums$ array.",
        "languages": [
            "C",
            "C++14",
            "Java",
            "Python3"
        ],
        "memory_limit_mb": 256000,
        "note": "",
        "output_format": "For each test case, output the minimum number of moves required to make $nums$ *\"Balanced\"*.",
        "samples": [
            {
                "input": "2\n4 6\n1 5 1 5\n6 5\n1 2 3 4 5 1\n",
                "output": "0\n2\n"
            }
        ],
        "status": "PUBLISHED",
        "tags": [
            "company-JaneStreet"
        ],
        "template_code": [],
        "time_limit_sec": 2.0,
        "title": "Balance",
        "video_editorial_id": null
    },
    "details": "Problem Details"
}