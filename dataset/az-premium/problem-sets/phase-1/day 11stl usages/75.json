{
    "code": 200,
    "data": {
        "body": "<p>There are <i>N</i> objects, and each object has some price. The price of <i>i</i>th object is<i> A<sub>i</sub></i>.<br>You have total money <i>M</i>, and you want to buy as many objects as possible.<br>Find the maximum objects that you can buy?</p>",
        "complete_approach": "",
        "constraints": "1 \u2264 T \u2264 10<sup>5</sup>\n1 \u2264 N \u2264 10<sup>5</sup>\n1 \u2264 Ai \u2264 10<sup>8</sup>\n1 \u2264 M \u2264 10<sup>8</sup>\nSum of N over all test cases \u2264 5 * 10<sup>5</sup>.",
        "difficulty": null,
        "editorial_code": [
            {
                "code": "```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long int\n#define LD long double\n\nconst int N = 100010;\n\nint inf = 1e9;\nint mod = 1e9 + 7;\n\nsigned main() {\n  // freopen(\"IN\", \"r\", stdin);\n  // freopen(\"OUT\", \"w\", stdout);\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n\n  int T;\n  cin >> T;\n  while (T--) {\n    int n, m;\n    cin >> n >> m;\n    int a[n];\n    for (int i = 0; i < n; i++) cin >> a[i];\n    sort(a, a + n);\n    int cnt = 0;\n    for (int i = 0; i < n; i++) {\n      if (a[i] > m) break;\n      cnt++;\n      m -= a[i];\n    }\n    cout << cnt << \"\\n\";\n  }\n  return 0;\n}\n```",
                "language": "C++14"
            }
        ],
        "health_check": {
            "issues": [],
            "last_updated": "2024-06-22T02:32:27.379079+00:00"
        },
        "hints": {
            "hint1": "Try to think in a greedy way!",
            "hint2": "Sort the objects with respect to price, and start buying objects in a greedy fashion.",
            "solution_approach": "It's always better to buy an object which has a smaller price. So that we can be left with a greater remaining budget. Sort all objects with respect to their prices. And start buying objects in increasing order of price.\n\nTime complexity: $O(N \\log N)$\nSpace complexity: $O(1)$ extra space"
        },
        "id": 75,
        "input_format": "<p>The first line contains <i>T</i>, the number of test cases.<br>The first line of each test case contains <i>N</i>, the number of objects, and <i>M</i>, the money you have.<br>The second line of each test case contains <i>N</i> space-separated integers <i>A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub></i>.</p>",
        "languages": [
            "C",
            "C++14",
            "Java",
            "Python3"
        ],
        "memory_limit_mb": 256000,
        "note": "<p><i><strong>Explanation 1:</strong></i><br>Buy Objects with prices 1, 2.</p><p><i><strong>Explanation 2:</strong></i><br>Buy Objects with prices 1, 2, 3, 4.</p><p><i><strong>Explanation 3:</strong></i><br>Buy all objects.</p>",
        "output_format": "<p>For each test case, print a single number representing the maximum objects that you can buy.</p>",
        "samples": [
            {
                "explanation": "**Test Case 1**: Using money 5, we can buy at max 2 objects. E.g. 1st and 2nd, total cost is 1 + 3 = 4.\n**Test Case 2**: Using money 10, we can buy at max 4 objects. E.g. 1st, 2nd, 3rd and 4th, total cost is 1 + 3 + 2 + 4 = 10.\n**Test Case 3**: Using money 20, we can buy all 5 objects.",
                "input": "3\n5 5\n1 3 2 4 5\n5 10\n1 3 2 4 5\n5 20\n1 3 2 4 5",
                "output": "2\n4\n5"
            }
        ],
        "status": "PUBLISHED",
        "tags": [],
        "template_code": [],
        "time_limit_sec": 1.0,
        "title": "Buy Maximum Objects I",
        "video_editorial_id": null
    },
    "details": "Problem Details"
}