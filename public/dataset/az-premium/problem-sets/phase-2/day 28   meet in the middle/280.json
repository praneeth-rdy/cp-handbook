{
    "code": 200,
    "data": {
        "body": "<p>You are given an array of <i>n</i> integers, and your task is to find four values (at distinct positions) whose sum is <i>x</i>.</p>",
        "complete_approach": "",
        "constraints": "<p>1 \u2264 <i>n</i> \u2264 1000<br>1 \u2264 <i>x, a<sub>i</sub></i> \u2264 10<sup>9</sup></p>",
        "difficulty": 4,
        "editorial_code": [
            {
                "code": "```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n\n    int n, x; \n    cin >> n >> x;\n\n    if(n < 4) {\n        cout << \"NO\\n\";\n        return 0;\n    }\n\n    int a[n];\n    for(int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    map<int,pair<int,int>> M;\n    M[a[0] + a[1]] = {0, 1};\n\n    for(int i = 2; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            int cur = a[i] + a[j];\n            if(M.find(x - cur) != M.end()) {\n                cout << \"YES\\n\";\n                return 0;\n            }\n        }\n        for(int j = 0; j < i; j++) {\n            int cur = a[j] + a[i];\n            M[cur] = {j, i};\n        }\n    }\n\n    cout << \"NO\\n\";\n\n    return 0;\n}\n```",
                "language": "C++14"
            }
        ],
        "health_check": {
            "issues": [],
            "last_updated": "2024-06-22T02:15:14.267818+00:00"
        },
        "hints": {
            "hint1": "<p>You can apply brute force with <i>O(n<sup>4</sup>)</i> complexity, but this solution won't pass the constraints.</p>",
            "hint2": "<p>Try to optimize the loop, and calculate values in the pairs.</p>",
            "solution_approach": "<p>Maintain two-pointers and one hash table. Let the two pointers are <i>lo</i> and <i>hi</i>. &nbsp;<br>For current {<i>lo, hi</i>} pair, the hash table contains all two-sums possible for all pairs with indices less than <i>lo</i>.<br>So if <i>x - a<sub>lo</sub> - a<sub>hi</sub></i> exists in the hash table then it's good, and we'll return directly from it. If not increment <i>hi</i>.<br>When it's time to increment <i>lo</i> to <i>lo</i> + 1, include all pairs two-sums with one index as <i>lo</i> in the hash table.</p><p>Please refer to the editorial solution for more clarity.</p>"
        },
        "id": 280,
        "input_format": "<p>The first input line has two integers <i>n</i> and <i>x</i>: the array size and the target sum.<br>The second line has <i>n</i> integers <i>a<sub>1</sub>, a<sub>2</sub>, \u2026,a<sub>n</sub></i>: the array values.</p>",
        "languages": [
            "C",
            "C++14",
            "Java",
            "Python3"
        ],
        "memory_limit_mb": 256000,
        "note": "<p>Four values are {2, 8, 3, 2}.</p>",
        "output_format": "<p>Print 'YES' if such four values exist, otherwise 'NO'.</p>",
        "samples": [
            {
                "input": "8 15\n3 2 5 8 1 3 2 3",
                "output": "YES"
            }
        ],
        "status": "PUBLISHED",
        "tags": [
            "Meet In The Middle",
            "company-Accenture Japan"
        ],
        "template_code": [],
        "time_limit_sec": 1.0,
        "title": "Four Values",
        "video_editorial_id": null
    },
    "details": "Problem Details"
}