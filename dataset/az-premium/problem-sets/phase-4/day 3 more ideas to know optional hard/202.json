{
    "code": 200,
    "data": {
        "body": "<p>or a (possibly empty) sequence of positive integers <i>S</i>, mex is defined as <i>f</i>(<i>S</i>) as the smallest positive integer that does not appear in <i>S</i>. For example, <i>f</i>([]) = 1, <i>f</i>([3,4,3,5]) = 1, <i>f</i>([2,5,1,1,2,3]) = 4.</p><p>You have given a sequence of <i>N</i> integers <i>A<sub>1</sub>, A<sub>2</sub>, \u2026, A<sub>N</sub></i>. Your task is to find the sum of <i>f</i>(<i>S</i>) over all 2<i><sup>N</sup></i> possible subsequences <i>S</i> of this sequence.</p><p>Since the resulting sum can be very big, compute it modulo 998244353.</p>",
        "complete_approach": "",
        "constraints": "<p>1 \u2264 <i>T </i>\u2264 10<br>1 \u2264 <i>N </i>\u2264 10<sup>5</sup><br>1 \u2264 <i>A<sub>i</sub> </i>\u2264 10<sup>9</sup> for each valid <i>i</i></p>",
        "difficulty": null,
        "editorial_code": [
            {
                "code": "```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N = 200010;\nconst int MOD = 998244353;\n\nint t, n; \nll two[N], a[N], freq[N], sf[N];\n\nint main() {\n  two[0] = 1;\n  for (int i = 1; i < N; ++i) two[i] = 2 * two[i - 1] % MOD;\n  cin >> t;\n  while (t--) {\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; ++i) {\n\t  scanf(\"%lld\", a + i);\n\t  ++freq[min(a[i], n + 1LL)];\n\t}\n\tsf[n + 69] = 0;\n\tfor (int i = n + 68; i; --i) sf[i] = sf[i + 1] + freq[i];\n\tll ans = 0, pf = 1;\n\tfor (ll i = 1; i <= n + 1; ++i) {\n\t  ans = (ans + i * (pf * two[sf[i + 1]] % MOD)) % MOD;\n\t  pf = pf * (two[freq[i]] - 1) % MOD;\n\t}\n\tans += MOD, ans %= MOD;\n\tprintf(\"%lld\\n\", ans);\n\tfor (int i = 0; i <= n + 69; ++i) freq[i] = 0;\n  }\n  return 0;\n}\n```",
                "language": "C++14"
            }
        ],
        "health_check": {
            "issues": [],
            "last_updated": "2024-06-22T02:40:23.765163+00:00"
        },
        "hints": {
            "hint1": "The mex of a subsequence of length N cannot exceed N. So we can replace all elements greater than N with N.",
            "hint2": "Fixing the value of mex, let\u2019s try to count the number of subsequences with specific mex.",
            "solution_approach": "<p>The mex of a subsequence of length <i>N</i> cannot exceed <i>N</i>. So we can replace all elements greater than <i>N</i> with <i>N</i>.<br>Fixing the value of mex, let\u2019s try to count the number of subsequences with specific mex.<br>For a given mex, we need each positive value smaller than mex to be present at least once, value mex shouldn\u2019t be present, and values greater than mex do not affect us.<br>If <i>f<sub>x</sub></i>\u200b denote the frequency of value <i>x</i>, the number of non-empty subsets of these <i>f<sub>x</sub></i>\u200b elements is 2<i><sup>f</sup><sub><sup>x</sup></sub></i>\u200b\u22121. We need to select one of the subsets for each <i>x</i> less than current mex, giving us (2<sup>f1</sup> - 1) * (2<sup>f2</sup> - 1)&nbsp;<i> \u2026. * </i>(2<sup>f(x-1)</sup> - 1).<br>To consider elements greater than mex, we can take any subset of those. If there are <i>y</i> elements greater than mex, it contributes 2<i><sup>y</sup></i> subsets for each choice of subsets of smaller values.</p>"
        },
        "id": 202,
        "input_format": "<p>The first line of the input contains a single integer <i>T</i> denoting the number of test cases. The description of <i>T</i> test cases follows.<br>The first line of each test case contains a single integer <i>N</i>.<br>The second line contains <i>N</i> space-separated integers <i>A<sub>1</sub>, A<sub>2</sub>, \u2026, A<sub>N</sub></i>.</p>",
        "languages": [
            "C",
            "C++14",
            "Java",
            "Python3"
        ],
        "memory_limit_mb": 256000,
        "note": "<p><strong>Example case 1:</strong> The values for all possible subsequences are <i>f</i>([]) = 1, <i>f</i>([1]) = 2, <i>f</i>([1]) = 2, <i>f</i>([1,1]) = 2.</p><p><strong>Example case 2:</strong> The values for all possible subsequences are <i>f</i>([]) = 1, <i>f</i>([1]) = 2, <i>f</i>([2]) = 1, <i>f</i>([1]) = 2, <i>f</i>([1,2]) = 3, <i>f</i>([2,1]) = 3, <i>f</i>([1,1]) = 2, <i>f</i>([1,2,1]) = 3.</p>",
        "output_format": "<p>For each test case, print a single line containing one integer \u2015 the sum of <i>f</i>(<i>S</i>) over all subsequences modulo 998244353.</p>",
        "samples": [
            {
                "input": "2\n2\n1 1\n3\n1 2 1",
                "output": "7\n17"
            }
        ],
        "status": "PUBLISHED",
        "tags": [],
        "template_code": [],
        "time_limit_sec": 3.0,
        "title": "Tough Mex",
        "video_editorial_id": 8168
    },
    "details": "Problem Details"
}